import{_ as e,c as t,o as a,N as r}from"./chunks/framework.af6cac23.js";const h=JSON.parse('{"title":"nw-builder","description":"","frontmatter":{},"headers":[],"relativePath":"index.md"}'),o={name:"index.md"},i=r('<h1 id="nw-builder" tabindex="-1">nw-builder <a class="header-anchor" href="#nw-builder" aria-label="Permalink to &quot;nw-builder&quot;">​</a></h1><p>Build NW.js applications for Linux, MacOS, and Windows.</p><h2 id="major-features" tabindex="-1">Major Features <a class="header-anchor" href="#major-features" aria-label="Permalink to &quot;Major Features&quot;">​</a></h2><ul><li>Get, run or build applications.</li><li>Integrate <a href="https://github.com/nwjs-ffmpeg-prebuilt/nwjs-ffmpeg-prebuilt" target="_blank" rel="noreferrer"><code>nwjs-ffmpeg-prebuilt</code></a></li><li>Configure executable fields and icons</li><li>Support downloading from mirrors</li></ul><blockquote><p>The following documentation assumes you know <a href="https://nwjs.readthedocs.io/en/latest/For%20Users/Getting%20Started/" target="_blank" rel="noreferrer">how to write NW.js applications</a>.</p></blockquote><p>Consult the <code>Installation Guide</code> if you want to give <code>nw-builder</code> a try.</p>',6),n=[i];function l(s,d,c,u,p,_){return a(),t("div",null,n)}const b=e(o,[["render",l]]);export{h as __pageData,b as default};
