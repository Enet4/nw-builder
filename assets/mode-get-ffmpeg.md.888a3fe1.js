import{_ as t,o as e,c as o,Q as s}from"./chunks/framework.356f6f12.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"mode-get-ffmpeg.md","filePath":"mode-get-ffmpeg.md"}'),a={name:"mode-get-ffmpeg.md"},n=s(`<p><a name="get_ffmpeg"></a></p><h2 id="get-ffmpeg-options-⇒-promise-void" tabindex="-1">get_ffmpeg(options) ⇒ <code>Promise.&lt;void&gt;</code> <a class="header-anchor" href="#get-ffmpeg-options-⇒-promise-void" aria-label="Permalink to &quot;get\\_ffmpeg(options) ⇒ &lt;code&gt;Promise.&amp;lt;void&amp;gt;&lt;/code&gt;&quot;">​</a></h2><p><em>Note: This an internal function which is not called directly. Please see example usage below.</em></p><p>Get FFMPEG binaries.</p><p><strong>Kind</strong>: global function</p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>options</td><td><code>object</code></td><td>Get mode options</td></tr><tr><td>options.version</td><td><code>string</code></td><td>NW.js runtime version. Defaults to &quot;latest&quot;.</td></tr><tr><td>options.flavor</td><td><code>&quot;normal&quot;</code> | <code>&quot;sdk&quot;</code></td><td>NW.js build flavor. Defaults to &quot;normal&quot;.</td></tr><tr><td>options.platform</td><td><code>&quot;linux&quot;</code> | <code>&quot;osx&quot;</code> | <code>&quot;win&quot;</code></td><td>Target platform. Defaults to host platform.</td></tr><tr><td>options.arch</td><td><code>&quot;ia32&quot;</code> | <code>&quot;x64&quot;</code> | <code>&quot;arm64&quot;</code></td><td>Target architecture. Defaults to host architecture.</td></tr><tr><td>options.cacheDir</td><td><code>string</code></td><td>Cache directory path. Defaults to &quot;./cache&quot;</td></tr><tr><td>options.cache</td><td><code>boolean</code></td><td>If false, remove cache before download. Defaults to true.</td></tr></tbody></table><p><strong>Example</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// FFMPEG (proprietary codecs)</span></span>
<span class="line"><span style="color:#6A737D;">// Please read the license&#39;s constraints: https://nwjs.readthedocs.io/en/latest/For%20Developers/Enable%20Proprietary%20Codecs/#get-ffmpeg-binaries-from-the-community</span></span>
<span class="line"><span style="color:#B392F0;">nwbuild</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&quot;get&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  ffmpeg: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// FFMPEG (proprietary codecs)</span></span>
<span class="line"><span style="color:#6A737D;">// Please read the license&#39;s constraints: https://nwjs.readthedocs.io/en/latest/For%20Developers/Enable%20Proprietary%20Codecs/#get-ffmpeg-binaries-from-the-community</span></span>
<span class="line"><span style="color:#6F42C1;">nwbuild</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  mode: </span><span style="color:#032F62;">&quot;get&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  ffmpeg: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div>`,8),p=[n];function l(r,d,c,i,u,m){return e(),o("div",null,p)}const g=t(a,[["render",l]]);export{h as __pageData,g as default};
